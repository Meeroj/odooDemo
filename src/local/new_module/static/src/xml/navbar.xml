<templates>
    <t t-name="new_module.NavBar" owl="1">
    <header class="o_navbar" t-ref="root">
      <nav
        class="o_main_navbar"
        data-command-category="navbar"
      >
      <h1 class="logo_name">LOGO</h1>
        <!-- Apps Menu -->
          <xpath expr="//t[@t-call='web.NavBar.AppsMenu']" position="replace">
            <ul class="o_custom_navbar_menu">
              <t t-set="apps" t-value="menuService.getApps()" />
              <t t-foreach="apps" t-as="app" t-key="app">
                <li class="nav-item">
                  <a t-attf-href="/web#menu_id={{ app.id }}">
                    <t t-if="app.webIconData">
                      <img t-att-src="'data:' + app.webIconDataMimetype + ';base64,' + app.webIconData" class="o_nav_items_icon" />
                    </t>
                    <t t-else="">
                      <i class="fa fa-fw fa-inbox o_nav_items_icon"></i>
                    </t>
                    <t t-esc="app.name" />
                  </a>
                </li>
              </t>
            </ul>
          </xpath>





        <!-- Current App Sections -->
        <!-- <t t-if="currentAppSections.length" t-call="web.NavBar.SectionsMenu">
          <t t-set="sections" t-value="currentAppSections" />
          
        </t> -->

        <!-- Systray -->
      </nav>
    </header>
      <div class="d-flex custom_nav">
        <!-- App Brand -->
        <DropdownItem
          t-if="currentApp"
          href="getMenuItemHref(currentApp)"
          t-esc="currentApp.name"
          class="'o_menu_brand'"
          dataset="{ menuXmlid: currentApp.xmlid, section: currentApp.id }"
          onSelected="() => this.onNavBarDropdownItemSelection(currentApp)"
        />
        <div class="o_menu_systray d-flex flex-shrink-0 ms-auto" role="menu">
          <t t-foreach="systrayItems" t-as="item" t-key="item.key">
            <!-- This ensures the correct order of the systray items -->
            <div t-att-data-index="item.index"/>
            <ErrorHandler onError="error => this.handleItemError(error, item)">
                <t t-component="item.Component" t-props="item.props"/>
            </ErrorHandler>
          </t>
        </div></div>
  </t>
</templates>